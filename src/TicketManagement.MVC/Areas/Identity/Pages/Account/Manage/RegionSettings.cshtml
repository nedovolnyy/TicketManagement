@page
@model RegionSettingsModel

@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options

@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocalizationOptions

@{
    ViewData["Title"] = "Region settings";
    ViewData["ActivePage"] = ManageNavPages.RegionSettings;
    var requestCulture = PageContext.HttpContext.Features.Get<IRequestCultureFeature>();
    var culturesList = LocalizationOptions.Value.SupportedUICultures
        ?.Select(c => new SelectListItem { Value = c.Name, Text = c.DisplayName })
        .ToList();
    var timezoneList = TimeZoneInfo.GetSystemTimeZones()
        ?.Select(c => new SelectListItem { Value = c.BaseUtcOffset.ToString(), Text = c.DisplayName })
        .ToList();
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
    <div class="col-md-6">
        <form id="region-settings" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (requestCulture is not null)
            {
                <div class="form-floating">
                    <select name="culture" asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="culturesList" class="form-select"></select>
                    <label asp-for="Input.Language"></label>
                </div>
            <div class="form-floating">
                <select name="timeZone" asp-for="Input.TimeZone" aria-label="@DateTimeOffset.Now.Offset.ToString()" asp-items="timezoneList" class="form-select"></select>
                <label asp-for="Input.TimeZone" class="form-label"></label>
            </div>
            }
            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">@Localizer["Save"]</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
