@using EventManagementApiClientGenerated
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Options
@using TicketManagement.Common.DI

@model EventArea

@inject EventSeatManagementApiClient EventSeatManagementApiClient
@inject IViewLocalizer Localizer

@{
    var eventSeatsCollection = await EventSeatManagementApiClient.GetAllEventSeatsByEventAreaIdAsync(Model.Id);
    var returnUrl = string.IsNullOrEmpty(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}" + Context.Request.QueryString.ToString();
}

@Html.Raw("<table>")
<div class="input-group">
    @{
        int tempRow = 0;
        foreach (var seat in eventSeatsCollection.ToList())
        {
            if (seat.Row != tempRow)
            {
                    @Html.Raw("<tr><td>")
                    <div class="container">
                        @if (User.Identity is not null && User.Identity.IsAuthenticated)
                    {
                            <form id="@Html.Raw("seat"+seat.Id)" asp-controller="Event"
              asp-action="Purchase" asp-route-eventSeatId="@seat.Id" asp-route-returnUrl="@returnUrl" asp-route-price="@Model.Price"
              method="post" class="form-horizontal" role="form">
                                <button class="btn btn-outline-secondary btn-lg btn-block" style="height: 80px;" type="submit" onclick="@Html.Raw("return confirm('")@Localizer["Are you sure you want to buy this seat?"]@Html.Raw("')")" id="@Html.Raw("btn"+seat.Id)" @((seat.State != State.Available) ? "disabled" : "") >
                                    <label class="text-sm-start" style="font-size: 0.5em; display:table-cell; vertical-align:top;">@seat.Row</label>
                                    @Html.DisplayFor(model => model.Price)
                                    <label class="text-sm-end" style="font-size: 0.5em; display:table-cell; vertical-align:top;">@seat.Number</label>
                                </button>
                            </form>
                    }
                    else
                    {
                            <button class="btn btn-outline-secondary btn-lg btn-block" style="height: 80px;" type="submit" id="@Html.Raw("btn"+seat.Id)" @((seat.State != State.Available) ? "disabled" : "")>
                                <label class="text-sm-start" style="font-size: 0.5em; display:table-cell; vertical-align:top;">@seat.Row</label>
                                @Html.DisplayFor(model => model.Price)
                                <label class="text-sm-end" style="font-size: 0.5em; display:table-cell; vertical-align:top;">@seat.Number</label>
                            </button>
                    }
                    </div>
                    @Html.Raw("</td>")
            }
            if (seat.Row == tempRow)
            {
                    @Html.Raw("<td>")
                    <div class="container">
                        @if (User.Identity is not null && User.Identity.IsAuthenticated)
                    {
                            <form id="@Html.Raw("seat"+seat.Id)" asp-controller="Event"
              asp-action="Purchase" asp-route-eventSeatId="@seat.Id" asp-route-returnUrl="@returnUrl" asp-route-price="@Model.Price"
              method="post" class="form-horizontal" role="form">
                                <button class="btn btn-outline-secondary btn-lg btn-block" style="height: 80px;" type="submit" onclick="@Html.Raw("return confirm('")@Localizer["Are you sure you want to buy this seat?"]@Html.Raw("')")" id="@Html.Raw("btn"+seat.Id)" @((seat.State != State.Available) ? "disabled" : "") >
                                    <label class="text-sm-start" style="font-size: 0.5em; display:table-cell; vertical-align:top;">@seat.Row</label>
                                    @Html.DisplayFor(model => model.Price)
                                    <label class="text-sm-end" style="font-size: 0.5em; display:table-cell; vertical-align:top;">@seat.Number</label>
                                </button>
                            </form>
                    }
                    else
                    {
                            <button class="btn btn-outline-secondary btn-lg btn-block" style="height: 80px;" type="submit" id="@Html.Raw("btn"+seat.Id)" @((seat.State != State.Available) ? "disabled" : "")>
                                <label class="text-sm-start" style="font-size: 0.5em; display:table-cell; vertical-align:top;">@seat.Row</label>
                                @Html.DisplayFor(model => model.Price)
                                <label class="text-sm-end" style="font-size: 0.5em; display:table-cell; vertical-align:top;">@seat.Number</label>
                            </button>
                    }
                    </div>
                    @Html.Raw("</td>")
            }
            tempRow = seat.Row;
        }
            @Html.Raw("</tr>")
    }
</div>
@Html.Raw("</table>")
