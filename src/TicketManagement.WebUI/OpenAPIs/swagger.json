{
  "x-generator": "NSwag v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v9.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "My Title",
    "version": "1.0.0"
  },
  "paths": {
    "/api/UsersManagement/users": {
      "get": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Returns list of the users.",
        "operationId": "UsersManagement_GetAllUsers",
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/user": {
      "post": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Add new user.",
        "operationId": "UsersManagement_CreateUser",
        "parameters": [
          {
            "name": "password",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Update existed user.",
        "operationId": "UsersManagement_EditUser",
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/user/{id}": {
      "delete": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Delete selected user.",
        "operationId": "UsersManagement_DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/user/{userId}": {
      "get": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Returns selected user.",
        "operationId": "UsersManagement_GetByIdUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/UserName/{userId}": {
      "post": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Sets the given userName for the specified userId.",
        "operationId": "UsersManagement_SetUserName",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user whose name should be set.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userName",
            "in": "query",
            "description": "The user name to set.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "The Task that represents the asynchronous operation."
          }
        }
      }
    },
    "/api/UsersManagement/HasPassword/{userId}": {
      "get": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Gets a flag indicating whether the specified user has a password.",
        "operationId": "UsersManagement_HasPassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/IsEmailConfirmed/{userId}": {
      "get": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Gets a flag indicating whether the email address for the specified userId has been verified, true if the email address is verified otherwise\nfalse.",
        "operationId": "UsersManagement_IsEmailConfirmed",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user whose email confirmation status should be returned.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The task object containing the results of the asynchronous operation, a flag indicating whether the email address for the specified userId\nhas been confirmed or not.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/EmailToken/{userId}": {
      "post": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Generates an email change token for the specified user.",
        "operationId": "UsersManagement_GenerateChangeEmailToken",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user to generate an email change token for.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "newEmail",
            "in": "query",
            "description": "The new email address.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "The Task that represents the asynchronous operation, an email change token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/password/{userId}": {
      "put": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Returns selected user.",
        "operationId": "UsersManagement_ChangePassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "currentPassword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "newPassword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Returns a flag indicating whether the given password is valid for the\nspecified userId.",
        "operationId": "UsersManagement_CheckPassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user whose password should be validated.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password to validate.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "The Task that represents the asynchronous operation, containing true if\n            the specified password matches the one store for the userId,\n            otherwise false.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/RefreshSignIn/{userId}": {
      "post": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Signs in the specified userId, whilst preserving the existing\nAuthenticationProperties of the current signed-in user like rememberMe, as an asynchronous operation.",
        "operationId": "UsersManagement_RefreshSignIn",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user to sign-in.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The task object representing the asynchronous operation."
          }
        }
      }
    },
    "/api/UsersManagement/PhoneNumber/{userId}": {
      "put": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Sets the phone number for the specified userId.",
        "operationId": "UsersManagement_SetPhoneNumber",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The user whose phone number to set.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "The phone number to set.",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "The Task that represents the asynchronous operation, containing the IdentityResult\nof the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/role/{userId}": {
      "get": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Returns selected users role.",
        "operationId": "UsersManagement_GetRoleById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeRole"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Change role selected user.",
        "operationId": "UsersManagement_ChangeRole",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "roles",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "."
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/cart": {
      "put": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Change cart selected user.",
        "operationId": "UsersManagement_EditCart",
        "parameters": [
          {
            "name": "money",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "."
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/purchase": {
      "post": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Purchase methods for selected user.",
        "operationId": "UsersManagement_Purchase",
        "parameters": [
          {
            "name": "eventSeatId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "returnUrl",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "price",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "responses": {
          "200": {
            "description": "."
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersManagement/language/{userId}": {
      "post": {
        "tags": [
          "UsersManagement"
        ],
        "summary": "Change language selected user.",
        "operationId": "UsersManagement_SetLanguage",
        "parameters": [
          {
            "name": "culture",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/Users/Register": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Register",
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/Login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login into the new API.",
        "description": "Here is the code sample of usage.",
        "operationId": "Users_Login",
        "requestBody": {
          "x-name": "model",
          "description": ".",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "..",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/validate": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Validate",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdentityUser"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "balance"
            ],
            "properties": {
              "firstName": {
                "type": "string",
                "nullable": true
              },
              "surName": {
                "type": "string",
                "nullable": true
              },
              "language": {
                "type": "string",
                "nullable": true
              },
              "timeZone": {
                "type": "string",
                "nullable": true
              },
              "cartCount": {
                "type": "integer",
                "format": "int32"
              },
              "balance": {
                "title": "Balance",
                "type": "number",
                "format": "decimal"
              },
              "payHistory": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "IdentityUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdentityUserOfString"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "IdentityUserOfString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IdentityResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "succeeded": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IdentityError"
            }
          }
        }
      },
      "IdentityError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateUser": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id",
              "email"
            ],
            "properties": {
              "id": {
                "type": "string",
                "minLength": 1
              },
              "email": {
                "title": "Email",
                "type": "string",
                "format": "email",
                "minLength": 1
              },
              "userName": {
                "title": "UserName",
                "type": "string",
                "format": "email",
                "nullable": true
              },
              "password": {
                "title": "Password",
                "type": "string",
                "maxLength": 100,
                "minLength": 6,
                "nullable": true
              },
              "phoneNumber": {
                "type": "string",
                "nullable": true
              },
              "firstName": {
                "type": "string",
                "nullable": true
              },
              "surName": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "ChangeRole": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "allRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "userRoles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Role": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdentityRole"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "IdentityRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IdentityRoleOfString"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "IdentityRoleOfString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegisterModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "password": {
            "title": "Password",
            "type": "string",
            "maxLength": 100,
            "minLength": 6
          },
          "confirmPassword": {
            "title": "Confirm password",
            "type": "string",
            "nullable": true
          }
        }
      },
      "LoginModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "minLength": 1
          },
          "rememberMe": {
            "title": "Remember me?",
            "type": "boolean"
          }
        }
      }
    }
  }
}