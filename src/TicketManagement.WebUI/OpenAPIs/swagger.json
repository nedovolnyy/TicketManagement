{
  "x-generator": "NSwag v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v9.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "My Title",
    "version": "1.0.0"
  },
  "paths": {
    "/api/AreaManagement/areas": {
      "get": {
        "tags": [
          "AreaManagement"
        ],
        "summary": "Returns list of the areas.",
        "operationId": "AreaManagement_GetAllAreas",
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Area"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AreaManagement/area": {
      "post": {
        "tags": [
          "AreaManagement"
        ],
        "summary": "Add new area.",
        "operationId": "AreaManagement_InsertArea",
        "requestBody": {
          "x-name": "area",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Area"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "put": {
        "tags": [
          "AreaManagement"
        ],
        "summary": "Update selected area.",
        "operationId": "AreaManagement_UpdateArea",
        "requestBody": {
          "x-name": "area",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Area"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/AreaManagement/area/{areaId}": {
      "delete": {
        "tags": [
          "AreaManagement"
        ],
        "summary": "Delete selected area.",
        "operationId": "AreaManagement_DeleteArea",
        "parameters": [
          {
            "name": "areaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "get": {
        "tags": [
          "AreaManagement"
        ],
        "summary": "Returns selected area.",
        "operationId": "AreaManagement_GetByIdArea",
        "parameters": [
          {
            "name": "areaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Area"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/AreaManagement/AreasByLayoutId/{layoutId}": {
      "get": {
        "tags": [
          "AreaManagement"
        ],
        "summary": "Returns list of the areas into selected layoutId.",
        "operationId": "AreaManagement_GetAllAreasByLayoutId",
        "parameters": [
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Area"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventAreaManagement/eventAreas": {
      "get": {
        "tags": [
          "EventAreaManagement"
        ],
        "summary": "Returns list of the eventAreas.",
        "operationId": "EventAreaManagement_GetAllEventAreas",
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventArea"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EventAreaManagement/eventArea": {
      "post": {
        "tags": [
          "EventAreaManagement"
        ],
        "summary": "Add new eventArea.",
        "operationId": "EventAreaManagement_InsertEventArea",
        "requestBody": {
          "x-name": "eventArea",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventArea"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "put": {
        "tags": [
          "EventAreaManagement"
        ],
        "summary": "Update selected eventArea.",
        "operationId": "EventAreaManagement_UpdateEventArea",
        "requestBody": {
          "x-name": "eventArea",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventArea"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/EventAreaManagement/eventArea/{eventAreaId}": {
      "delete": {
        "tags": [
          "EventAreaManagement"
        ],
        "summary": "Delete selected eventArea.",
        "operationId": "EventAreaManagement_DeleteEventArea",
        "parameters": [
          {
            "name": "eventAreaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "get": {
        "tags": [
          "EventAreaManagement"
        ],
        "summary": "Returns selected eventArea.",
        "operationId": "EventAreaManagement_GetByIdEventArea",
        "parameters": [
          {
            "name": "eventAreaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventArea"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventAreaManagement/EventAreasByEventId/{eventId}": {
      "get": {
        "tags": [
          "EventAreaManagement"
        ],
        "summary": "Returns list of the eventAreas into selected eventId.",
        "operationId": "EventAreaManagement_GetAllEventAreasByEventId",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventArea"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventManagement/events": {
      "get": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Returns list of the events.",
        "operationId": "EventManagement_GetAllEvents",
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EventManagement/event": {
      "post": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Add new event.",
        "operationId": "EventManagement_InsertEvent",
        "parameters": [
          {
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "event",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "put": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Update selected event.",
        "operationId": "EventManagement_UpdateEvent",
        "parameters": [
          {
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "decimal"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "event",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/EventManagement/event/{eventId}": {
      "delete": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Delete selected event.",
        "operationId": "EventManagement_DeleteEvent",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "get": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Returns selected event.",
        "operationId": "EventManagement_GetByIdEvent",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventManagement/IsAllAvailableSeats/{eventId}": {
      "get": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Is all available seats in selected event.",
        "operationId": "EventManagement_IsAllAvailableSeats",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventManagement/EventsByLayoutId/{layoutId}": {
      "get": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Returns list of the events into selected layoutId.",
        "operationId": "EventManagement_GetAllEventsByLayoutId",
        "parameters": [
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventManagement/PriceByEventId/{eventId}": {
      "get": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Get price by eventId.",
        "operationId": "EventManagement_GetPriceByEventId",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "decimal"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventManagement/SeatsAvailableCount/{eventId}": {
      "get": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Get seats available count by eventId..",
        "operationId": "EventManagement_GetSeatsAvailableCount",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventManagement/SeatsCount/{layoutId}": {
      "get": {
        "tags": [
          "EventManagement"
        ],
        "summary": "Get seats count by layoutId.",
        "operationId": "EventManagement_GetSeatsCount",
        "parameters": [
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventSeatManagement/eventSeats": {
      "get": {
        "tags": [
          "EventSeatManagement"
        ],
        "summary": "Returns list of the eventSeats.",
        "operationId": "EventSeatManagement_GetAllEventSeats",
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventSeat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/EventSeatManagement/eventSeat": {
      "post": {
        "tags": [
          "EventSeatManagement"
        ],
        "summary": "Add new eventSeat.",
        "operationId": "EventSeatManagement_InsertEventSeat",
        "requestBody": {
          "x-name": "eventSeat",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSeat"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "put": {
        "tags": [
          "EventSeatManagement"
        ],
        "summary": "Update selected eventSeat.",
        "operationId": "EventSeatManagement_UpdateEventSeat",
        "requestBody": {
          "x-name": "eventSeat",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSeat"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/EventSeatManagement/eventSeat/{eventSeatId}": {
      "delete": {
        "tags": [
          "EventSeatManagement"
        ],
        "summary": "Delete selected eventSeat.",
        "operationId": "EventSeatManagement_DeleteEventSeat",
        "parameters": [
          {
            "name": "eventSeatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "get": {
        "tags": [
          "EventSeatManagement"
        ],
        "summary": "Returns selected eventSeat.",
        "operationId": "EventSeatManagement_GetByIdEventSeat",
        "parameters": [
          {
            "name": "eventSeatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSeat"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventSeatManagement/EventSeatStatus/{eventSeatId}": {
      "post": {
        "tags": [
          "EventSeatManagement"
        ],
        "summary": "Change eventseat status by eventSeatId.",
        "operationId": "EventSeatManagement_ChangeEventSeatStatus",
        "parameters": [
          {
            "name": "eventSeatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/EventSeatManagement/EventSeatsByEventAreaId/{eventAreaId}": {
      "get": {
        "tags": [
          "EventSeatManagement"
        ],
        "summary": "Returns list of the eventSeats into selected eventAreaId.",
        "operationId": "EventSeatManagement_GetAllEventSeatsByEventAreaId",
        "parameters": [
          {
            "name": "eventAreaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventSeat"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/LayoutManagement/layouts": {
      "get": {
        "tags": [
          "LayoutManagement"
        ],
        "summary": "Returns list of the layouts.",
        "operationId": "LayoutManagement_GetAllLayouts",
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Layout"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/LayoutManagement/layout": {
      "post": {
        "tags": [
          "LayoutManagement"
        ],
        "summary": "Add new layout.",
        "operationId": "LayoutManagement_InsertLayout",
        "requestBody": {
          "x-name": "layout",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Layout"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "put": {
        "tags": [
          "LayoutManagement"
        ],
        "summary": "Update selected layout.",
        "operationId": "LayoutManagement_UpdateLayout",
        "requestBody": {
          "x-name": "layout",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Layout"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/LayoutManagement/layout/{layoutId}": {
      "delete": {
        "tags": [
          "LayoutManagement"
        ],
        "summary": "Delete selected layout.",
        "operationId": "LayoutManagement_DeleteLayout",
        "parameters": [
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "get": {
        "tags": [
          "LayoutManagement"
        ],
        "summary": "Returns selected layout.",
        "operationId": "LayoutManagement_GetByIdLayout",
        "parameters": [
          {
            "name": "layoutId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Layout"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/LayoutManagement/LayoutsByVenueId/{venueId}": {
      "get": {
        "tags": [
          "LayoutManagement"
        ],
        "summary": "Returns list of the layouts into selected layoutId.",
        "operationId": "LayoutManagement_GetAllLayoutsByVenueId",
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Layout"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/SeatManagement/seats": {
      "get": {
        "tags": [
          "SeatManagement"
        ],
        "summary": "Returns list of the seats.",
        "operationId": "SeatManagement_GetAllSeats",
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Seat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SeatManagement/seat": {
      "post": {
        "tags": [
          "SeatManagement"
        ],
        "summary": "Add new seat.",
        "operationId": "SeatManagement_InsertSeat",
        "requestBody": {
          "x-name": "seat",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Seat"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "put": {
        "tags": [
          "SeatManagement"
        ],
        "summary": "Update selected seat.",
        "operationId": "SeatManagement_UpdateSeat",
        "requestBody": {
          "x-name": "seat",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Seat"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/SeatManagement/seat/{seatId}": {
      "delete": {
        "tags": [
          "SeatManagement"
        ],
        "summary": "Delete selected seat.",
        "operationId": "SeatManagement_DeleteSeat",
        "parameters": [
          {
            "name": "seatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "get": {
        "tags": [
          "SeatManagement"
        ],
        "summary": "Returns selected seat.",
        "operationId": "SeatManagement_GetByIdSeat",
        "parameters": [
          {
            "name": "seatId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seat"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/SeatManagement/SeatsByAreaId/{areaId}": {
      "get": {
        "tags": [
          "SeatManagement"
        ],
        "summary": "Returns list of the seats into selected areaId.",
        "operationId": "SeatManagement_GetAllSeatsByAreaId",
        "parameters": [
          {
            "name": "areaId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Seat"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ThirdPartyEvent/ThirdPartyEvent": {
      "post": {
        "tags": [
          "ThirdPartyEvent"
        ],
        "summary": "Add new event from ThirdPartyEvent.",
        "operationId": "ThirdPartyEvent_InsertEvent",
        "requestBody": {
          "x-name": "eventFromJson",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventFromJson"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/VenueManagement/venues": {
      "get": {
        "tags": [
          "VenueManagement"
        ],
        "summary": "Returns list of the venues.",
        "operationId": "VenueManagement_GetAllVenues",
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Venue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/VenueManagement/venue": {
      "post": {
        "tags": [
          "VenueManagement"
        ],
        "summary": "Add new venue.",
        "operationId": "VenueManagement_InsertVenue",
        "requestBody": {
          "x-name": "venue",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Venue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "put": {
        "tags": [
          "VenueManagement"
        ],
        "summary": "Update selected venue.",
        "operationId": "VenueManagement_UpdateVenue",
        "requestBody": {
          "x-name": "venue",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Venue"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "."
          }
        }
      }
    },
    "/api/VenueManagement/venue/{venueId}": {
      "delete": {
        "tags": [
          "VenueManagement"
        ],
        "summary": "Delete selected venue.",
        "operationId": "VenueManagement_DeleteVenue",
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "."
          }
        }
      },
      "get": {
        "tags": [
          "VenueManagement"
        ],
        "summary": "Returns selected venue.",
        "operationId": "VenueManagement_GetByIdVenue",
        "parameters": [
          {
            "name": "venueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Venue"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/VenueManagement/VenueIdByName/{name}": {
      "get": {
        "tags": [
          "VenueManagement"
        ],
        "summary": "Return VenueId by venues name.",
        "operationId": "VenueManagement_GetVenueIdByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": ".",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Area": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "layoutId",
              "description",
              "coordX",
              "coordY"
            ],
            "properties": {
              "layoutId": {
                "type": "integer",
                "format": "int32"
              },
              "description": {
                "type": "string",
                "maxLength": 200,
                "minLength": 1
              },
              "coordX": {
                "type": "integer",
                "format": "int32"
              },
              "coordY": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "BaseEntity": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EventArea": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "eventId",
              "description",
              "coordX",
              "coordY",
              "price"
            ],
            "properties": {
              "eventId": {
                "type": "integer",
                "format": "int32"
              },
              "description": {
                "type": "string",
                "maxLength": 200,
                "minLength": 1
              },
              "coordX": {
                "type": "integer",
                "format": "int32"
              },
              "coordY": {
                "type": "integer",
                "format": "int32"
              },
              "price": {
                "title": "Price",
                "type": "number",
                "format": "decimal"
              }
            }
          }
        ]
      },
      "Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name",
              "eventTime",
              "description",
              "layoutId",
              "eventEndTime",
              "eventLogoImage"
            ],
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 120,
                "minLength": 1
              },
              "eventTime": {
                "type": "string",
                "format": "date-time",
                "minLength": 1
              },
              "description": {
                "type": "string",
                "minLength": 1
              },
              "layoutId": {
                "type": "integer",
                "format": "int32"
              },
              "eventEndTime": {
                "type": "string",
                "format": "date-time",
                "minLength": 1
              },
              "eventLogoImage": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      },
      "EventSeat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "eventAreaId",
              "row",
              "number",
              "state"
            ],
            "properties": {
              "eventAreaId": {
                "type": "integer",
                "format": "int32"
              },
              "row": {
                "type": "integer",
                "format": "int32"
              },
              "number": {
                "type": "integer",
                "format": "int32"
              },
              "state": {
                "$ref": "#/components/schemas/State"
              }
            }
          }
        ]
      },
      "State": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Available",
          "NotAvailable"
        ],
        "enum": [
          0,
          1
        ]
      },
      "Layout": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name",
              "venueId",
              "description"
            ],
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 120,
                "minLength": 1
              },
              "venueId": {
                "type": "integer",
                "format": "int32"
              },
              "description": {
                "type": "string",
                "maxLength": 120,
                "minLength": 1
              }
            }
          }
        ]
      },
      "Seat": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "areaId",
              "row",
              "number"
            ],
            "properties": {
              "areaId": {
                "type": "integer",
                "format": "int32"
              },
              "row": {
                "type": "integer",
                "format": "int32"
              },
              "number": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "EventFromJson": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fullImagePath": {
            "type": "string",
            "nullable": true
          },
          "event": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Event"
              }
            ]
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "eventLogoImage": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Venue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name",
              "description",
              "address"
            ],
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 120,
                "minLength": 1
              },
              "description": {
                "type": "string",
                "maxLength": 120,
                "minLength": 1
              },
              "address": {
                "type": "string",
                "maxLength": 200,
                "minLength": 1
              },
              "phone": {
                "type": "string",
                "maxLength": 30,
                "nullable": true
              }
            }
          }
        ]
      }
    }
  }
}